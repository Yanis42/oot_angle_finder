name: Build (Linux/Windows)

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            BUILD_NAME: Dev_AngleFinderCLI_Windows
            BUILD_ARGS: -F -c --add-data "res;res" src/main.py
            CMD_EXEC: PyInstaller
            FILE_TYPE: ".exe"
            BUILD_TEST_ARGS: -g basic target_enabled -s 0x8000 0xC000 -f 0x5E19 0x5E17 -a 0xACA0,0xFFFF
          - os: ubuntu-latest
            BUILD_NAME: Dev_AngleFinderCLI_Linux
            BUILD_ARGS: -F -c --add-data "res:res" src/main.py
            CMD_EXEC: pyinstaller
            FILE_TYPE: ""
            BUILD_TEST_ARGS: -g basic target_enabled -s 0x8000 0xC000 -f 0x5E19 0x5E17 -a 0xACA0,0xFFFF
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyInstaller
    - name: Build Project for ${{ matrix.os }}
      run: ${{ matrix.CMD_EXEC }} ${{ matrix.BUILD_ARGS }} -n ${{ matrix.BUILD_NAME }} ${{ matrix.CMD_EXTRAS }}
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.BUILD_NAME }}
        path: dist/${{ matrix.BUILD_NAME }}${{ matrix.FILE_TYPE }}
    # - name: Test Build
    #   run: dist/${{ matrix.BUILD_NAME }}${{ matrix.FILE_TYPE }} ${{ matrix.BUILD_TEST_ARGS }}
